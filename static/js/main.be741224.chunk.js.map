{"version":3,"sources":["camera/styles.js","camera/index.js","hooks/use-user-media.js","hooks/use-card-ratio.js","hooks/use-offsets.js","styles.js","index.js"],"names":["flashAnimation","keyframes","_templateObject","Object","taggedTemplateLiteral","Wrapper","styled","div","_templateObject2","Container","_templateObject3","_ref","maxWidth","concat","_ref2","maxHeight","Canvas","canvas","_templateObject4","Video","video","_templateObject5","Overlay","_templateObject6","Flash","_templateObject7","_ref3","flash","css","_templateObject8","Button","button","_templateObject9","CAPTURE_OPTIONS","audio","facingMode","Camera","onCapture","onClear","canvasRef","useRef","videoRef","container","setContainer","useState","width","height","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","mediaStream","requestedMedia","setMediaStream","useEffect","getTracks","forEach","track","stop","async","stream","navigator","mediaDevices","getUserMedia","err","enableVideoStream","useUserMedia","aspectRatio","calculateRatio","initialParams","setAspectRatio","useCallback","useCardRatio","offsets","vWidth","vHeight","cWidth","cHeight","setOffsets","x","y","Math","round","useOffsets","current","videoWidth","videoHeight","handleCanPlay","play","handleCapture","getContext","drawImage","toBlob","blob","handleClear","clearRect","srcObject","react_default","a","createElement","index_esm","bounds","onResize","contentRect","measureRef","ref","style","hidden","onCanPlay","autoPlay","playsInline","muted","top","left","onAnimationEnd","onClick","GlobalStyle","createGlobalStyle","styles_templateObject","Root","main","styles_templateObject2","Preview","img","styles_templateObject3","Footer","footer","styles_templateObject4","App","isCameraOpen","setIsCameraOpen","cardImage","setCardImage","react","undefined","src","URL","createObjectURL","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.be741224.chunk.js","sourcesContent":["import styled, { keyframes, css } from \"styled-components\";\n\nconst flashAnimation = keyframes`\n  from {\n    opacity: 0.75;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: ${({ maxWidth }) => maxWidth && `${maxWidth}px`};\n  max-height: ${({ maxHeight }) => maxHeight && `${maxHeight}px`};\n  overflow: hidden;\n`;\n\nexport const Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n`;\n\nexport const Video = styled.video`\n  position: absolute;\n\n  &::-webkit-media-controls-play-button {\n    display: none !important;\n    -webkit-appearance: none;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  bottom: 20px;\n  left: 20px;\n  box-shadow: 0px 0px 20px 56px rgba(0, 0, 0, 0.6);\n  border: 1px solid #ffffff;\n  border-radius: 10px;\n`;\n\nexport const Flash = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: #ffffff;\n  opacity: 0;\n\n  ${({ flash }) => {\n    if (flash) {\n      return css`\n        animation: ${flashAnimation} 750ms ease-out;\n      `;\n    }\n  }}\n`;\n\nexport const Button = styled.button`\n  width: 75%;\n  min-width: 100px;\n  max-width: 250px;\n  margin-top: 24px;\n  padding: 12px 24px;\n  background: silver;\n`;\n","import React, { useState, useRef } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"../hooks/use-user-media\";\nimport { useCardRatio } from \"../hooks/use-card-ratio\";\nimport { useOffsets } from \"../hooks/use-offsets\";\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\n\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\nexport function Camera({ onCapture, onClear }) {\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const offsets = useOffsets(\n    videoRef.current && videoRef.current.videoWidth,\n    videoRef.current && videoRef.current.videoHeight,\n    container.width,\n    container.height\n  );\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n\n    context.drawImage(\n      videoRef.current,\n      offsets.x,\n      offsets.y,\n      container.width,\n      container.height,\n      0,\n      0,\n      container.width,\n      container.height\n    );\n\n    canvasRef.current.toBlob(blob => onCapture(blob), \"image/jpeg\", 1);\n    setIsCanvasEmpty(false);\n    setIsFlashing(true);\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(true);\n    onClear();\n  }\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              ref={canvasRef}\n              width={container.width}\n              height={container.height}\n            />\n\n            <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            />\n          </Container>\n\n          {isVideoPlaying && (\n            <Button onClick={isCanvasEmpty ? handleCapture : handleClear}>\n              {isCanvasEmpty ? \"Take a picture\" : \"Take another picture\"}\n            </Button>\n          )}\n        </Wrapper>\n      )}\n    </Measure>\n  );\n}\n","import { useState, useEffect } from \"react\";\n\nexport function useUserMedia(requestedMedia) {\n  const [mediaStream, setMediaStream] = useState(null);\n\n  useEffect(() => {\n    async function enableVideoStream() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(\n          requestedMedia\n        );\n        setMediaStream(stream);\n      } catch (err) {\n        // Handle the error\n      }\n    }\n\n    if (!mediaStream) {\n      enableVideoStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach(track => {\n          track.stop();\n        });\n      };\n    }\n  }, [mediaStream, requestedMedia]);\n\n  return mediaStream;\n}\n","import { useState, useCallback } from \"react\";\n\n/**\n * Since the camera container resembles a licence card, the height must always be less than the\n * width (regardless of the resolution of the camera). This is achieved by calculating a ratio\n * that is always >= 1 by dividing by the largest dimension.\n **/\nexport function useCardRatio(initialParams) {\n  const [aspectRatio, setAspectRatio] = useState(initialParams);\n\n  const calculateRatio = useCallback((height, width) => {\n    if (height && width) {\n      const isLandscape = height <= width;\n      const ratio = isLandscape ? width / height : height / width;\n\n      setAspectRatio(ratio);\n    }\n  }, []);\n\n  return [aspectRatio, calculateRatio];\n}\n","import { useState, useEffect } from \"react\";\n\n/**\n * In the event that the video (v) is larger than it's parent container (c), calculate offsets\n * to center the container in the middle of the video.\n **/\nexport function useOffsets(vWidth, vHeight, cWidth, cHeight) {\n  const [offsets, setOffsets] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (vWidth && vHeight && cWidth && cHeight) {\n      const x = vWidth > cWidth ? Math.round((vWidth - cWidth) / 2) : 0;\n      const y = vHeight > cHeight ? Math.round((vHeight - cHeight) / 2) : 0;\n\n      setOffsets({ x, y });\n    }\n  }, [vWidth, vHeight, cWidth, cHeight]);\n\n  return offsets;\n}\n","import styled, { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n  \n  html {\n    height: 100%;\n  }\n\n  body {\n    overflow-x: hidden;\n    overflow-y: auto;\n    height: 100%;\n    padding: 32px;\n    margin: 0;\n    padding: 0;\n  }\n\n  div#root {\n    height: 100%;\n  }\n`;\n\nexport const Root = styled.main`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  text-align: center;\n  overflow-x: hidden;\n  overflow-y: auto;\n  padding: 50px 0 100px;\n`;\n\nexport const Preview = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Footer = styled.footer`\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50px;\n  background: silver;\n\n  button {\n    margin: 0 10px;\n  }\n`;\n","import React, { Fragment, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Camera } from \"./camera\";\nimport { Root, Preview, Footer, GlobalStyle } from \"./styles\";\n\nfunction App() {\n  const [isCameraOpen, setIsCameraOpen] = useState(false);\n  const [cardImage, setCardImage] = useState();\n\n  return (\n    <Fragment>\n      <Root>\n        {isCameraOpen && (\n          <Camera\n            onCapture={blob => setCardImage(blob)}\n            onClear={() => setCardImage(undefined)}\n          />\n        )}\n\n        {cardImage && (\n          <div>\n            <h2>Preview</h2>\n            <Preview src={cardImage && URL.createObjectURL(cardImage)} />\n          </div>\n        )}\n\n        <Footer>\n          <button onClick={() => setIsCameraOpen(true)}>Open Camera</button>\n          <button\n            onClick={() => {\n              setIsCameraOpen(false);\n              setCardImage(undefined);\n            }}\n          >\n            Close Camera\n          </button>\n        </Footer>\n      </Root>\n      <GlobalStyle />\n    </Fragment>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}